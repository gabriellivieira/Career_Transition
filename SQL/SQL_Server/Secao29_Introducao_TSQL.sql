/* TSQL */

/* TSQL É UM BLOCO DE LINGUAGEM DE PROGRAMACAO.
PROGRAMAS SAO UNIDADES QUE PODEM SER CHAMADAS DE BLOCOS
ANÔNIMOS. BLOCOS ANONIMOS NAO RECEBEM NOME, POIS
NAO SAO SALVOS NO BANCO. CRIAMOS BLOCOS ANONIMOS QUANDO
IREMOS EXECUTA-LOS UMA SO VEZ OU TESTAR ALGO */

-- Bloco de execução

BEGIN
	PRINT 'PRIMEIRO BLOCO'
END
GO

-- Bloco de atribuição de variaveis

DECLARE -- Declaração de variavel
	@CONTADOR INT

BEGIN -- execução
	SET @CONTADOR = 5
	PRINT @CONTADOR

END
GO

/* NO SQL SERVER CADA COLUNA, VARIAVEL LOCAL, EXPRESSAO E PARAMETRO TEM UM TIPO. */

DECLARE

		@V_NUMERO NUMERIC(10,2) = 100.52,
		@V_DATA DATETIME = '20170207'
BEGIN
		PRINT 'VALOR NUMERICO: ' + CAST(@V_NUMERO AS VARCHAR)
		PRINT 'VALOR NUMERICO: ' +CONVERT(VARCHAR, @V_NUMERO)
		PRINT 'VALOR DE DATA: ' + CAST(@V_DATA AS VARCHAR)
		PRINT 'VALOR DE DATA: ' + CONVERT(VARCHAR, @V_DATA, 121)
		PRINT 'VALOR DE DATA: ' + CONVERT(VARCHAR, @V_DATA, 120)
		PRINT 'VALOR DE DATA: ' + CONVERT(VARCHAR, @V_DATA, 105)
END
GO

-- Atribuindo resultados a uma variavel

USE EMPRESA
GO

CREATE TABLE CARROS(
	CARRO VARCHAR(20),
	FABRICANTE VARCHAR(30)
)
GO

INSERT INTO CARROS VALUES('KA','FORD')
INSERT INTO CARROS VALUES('FIESTA','FORD')
INSERT INTO CARROS VALUES('PRISMA','FORD')
INSERT INTO CARROS VALUES('CLIO','RENAULT')
INSERT INTO CARROS VALUES('SANDERO','RENAULT')
INSERT INTO CARROS VALUES('CHEVETE','CHEVROLET')
INSERT INTO CARROS VALUES('OMEGA','CHEVROLET')
INSERT INTO CARROS VALUES('PALIO','FIAT')
INSERT INTO CARROS VALUES('DOBLO','FIAT')
INSERT INTO CARROS VALUES('UNO','FIAT')
INSERT INTO CARROS VALUES('GOL','VOLKSWAGEN')
GO

SELECT * FROM CARROS
GO

DECLARE 
	@V_CONT_FORD INT,
	@V_CONT_FIAT INT

BEGIN
	-- Metodo 1 - O select precisa retornar uma simples coluna e um resultado

	SET @V_CONT_FORD = (SELECT COUNT(*) FROM CARROS
	WHERE FABRICANTE = 'FORD')

	PRINT 'QUANTIDADE FORD: ' + CAST(@V_CONT_FORD AS VARCHAR)

	-- Metodo 2
	SELECT @V_CONT_FIAT = COUNT(*) FROM CARROS WHERE FABRICANTE = 'FIAT'

	PRINT 'QUANTIDADE FIAT: ' + CONVERT(VARCHAR, @V_CONT_FIAT)
END
GO

/* BLOCOS DE IF E ELSE */

DECLARE
	
	@NUMERO INT = 5
BEGIN

	IF @NUMERO = 5 -- Expressão booleana
		PRINT 'O VALOR É VERDADEIRO'
	ELSE
		PRINT 'O VALOR É FALSO'
END
GO

/* CASE  - REPRESENTA UMA COLUNA
 É POSSIVEL CRIAR UM CASE PARA CADA COLUNA ADICIONANDO CASES A PROGRAMAÇÃO*/

DECLARE
	
	@CONTADOR INT

BEGIN
	
	SELECT 
	CASE
		WHEN FABRICANTE = 'FIAT' THEN 'FAIXA 1'
		WHEN FABRICANTE = 'CHEVROLET' THEN 'FAIXA 2'
		ELSE 'OUTRAS FAIXAS'
	END AS "INFORMAÇÕES",
	*
	FROM CARROS
END
GO

/* ATIVIDADE: TRANSFORMAR O CÓDIGO ACIMA DE TSQL EM UM BLOCO NOMEADO (PROCEDURE) */

CREATE PROC FABRICANTE @TIPO VARCHAR(30)
AS
	SELECT 
	CASE
		WHEN FABRICANTE = 'FIAT' THEN 'FAIXA 1'
		WHEN FABRICANTE = 'CHEVROLET' THEN 'FAIXA 2'
		ELSE 'OUTRAS FAIXAS'
	END AS "INFORMAÇÕES",
	*
	FROM CARROS
GO

EXEC FABRICANTE 'FIAT'
GO

/* LOOPS E WHILE */

-- LOOPS - São sequencias de uma mesma coisa que aconte até que uma condição é satisfeita

DECLARE 
	
	@I INT = 1 

BEGIN
	
	WHILE (@I < 15)
	BEGIN
		PRINT 'VALOR DE @I = ' + CAST(@I AS VARCHAR)
		SET @I = @I + 1 -- Pode ser informado  @I ++, esse linha serve para que o loop não seja infinito já que o 1 sempre vai ser 1 se não for incrementado
	END
END
GO