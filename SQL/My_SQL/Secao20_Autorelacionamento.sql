
/*AUTORELACIONAMENTO 
Quando uma tabela se relaciona com ela mesma.
*/

USE PROJETO;

DROP TABLE CURSOS;

CREATE TABLE CURSOS(
	IDCURSO INT PRIMARY KEY AUTO_INCREMENT,
	NOME VARCHAR(30),
	HORAS INT,
	VALOR FLOAT(10,2),
	ID_PREREQ INT
);

ALTER TABLE CURSOS ADD CONSTRAINT FK_PREREQ
FOREIGN KEY(ID_PREREQ) REFERENCES CURSOS(IDCURSO);

INSERT INTO CURSOS VALUES(NULL,'BD RELACIONAL',20,400.00,NULL);
INSERT INTO CURSOS VALUES(NULL,'BUSINESS INTELLIGENCE',40,800.00,1);
INSERT INTO CURSOS VALUES(NULL,'RELATORIOS AVANCADOS',20,600.00,2);
INSERT INTO CURSOS VALUES(NULL,'LOGICA PROGRAM',20,400.00,NULL);
INSERT INTO CURSOS VALUES(NULL,'RUBY',30,500.00,4);

SELECT * FROM CURSOS;

SELECT NOME, VALOR, HORAS, IFNULL(ID_PREREQ,"SEM REQ") REQUISITO
FROM CURSOS;

/* Exercicio: Trazer o nome, valor, horas e o nome do pre requisito do curso
ao invez do ID */

-- Por ter relacionamento com ela mesma, usamos a Join como se existisse
-- mais tabelas e assim trazer o nome do curso que é pre requesito ao invez do numero.

-- LEFT JOIN TRÁS TODOS OS CURSOS MESMO OS QUE NÃO ESTÃO POSSUEM PRE REQUISITOS
-- ENQUANTO JOIN VAI TRAZER SOMENTE QUEM POSSUI
SELECT 
	C.NOME AS CURSO, 
	C.VALOR AS VALOR,	
    C.HORAS AS CARGA, 
    IFNULL (P.NOME, '*****' ) AS PREREQ
FROM CURSOS C
LEFT JOIN CURSOS P
ON P.IDCURSO = C.ID_PREREQ
;
